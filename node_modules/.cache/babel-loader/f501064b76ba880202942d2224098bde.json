{"ast":null,"code":"var _jsxFileName = \"/Users/byeongjinkang/jsPractice/miniter_react/Miniter_React/main_page/src/component/innerboxes/rightside/enterNewtweet/enterNewTweet.js\";\nimport React from 'react';\nimport './enterNewTweet.css';\nimport { Textarea, Button } from '../../../form/input';\nimport DisplayTweets from '../displaytweets/displayTweets';\nimport * as OldTweets from '../../../../data/getAllTimeline';\n\nclass EnterNewTweet extends React.Component {\n  constructor() {\n    super();\n\n    this.getPreviousTweets = () => {\n      let previousTweets = OldTweets.default.result;\n\n      for (let i = 0; i < previousTweets.length; i++) {\n        this.tweetArr.push(this.makeTweetList(previousTweets[i]));\n      }\n\n      console.log(this.tweetArr);\n    };\n\n    this.getDate = () => {\n      let now = new Date();\n      let y = now.getFullYear();\n      let m = now.getMonth() + 1;\n      let d = now.getDate();\n      return \"\".concat(y).concat((m < 10 ? '0' : '') + m).concat((d < 10 ? '0' : '') + d);\n    };\n\n    this.generateNewTweet = () => {\n      this.setState({\n        buttonClicked: !this.state.buttonClicked,\n        user: document.querySelector('.UserName').innerHTML,\n        date: this.getDate(),\n        content: document.querySelector('.NewMessage').value\n      });\n      console.log(this.makeTweetList(this.state));\n    };\n\n    this.tweet = () => {\n      const newList = this.state.tweetArr.slice();\n      newList.push({\n        contents: 'sdfsf'\n      });\n      this.setState({\n        tweetArr: newList\n      });\n    };\n\n    this.state = {\n      buttonClicked: false,\n      user: \"\",\n      date: \"\",\n      content: \"\",\n      tweetArr: [] //this.tweetArr = [];\n\n    };\n    console.log('constructor');\n  }\n\n  componentDidMount() {\n    //첫 화면에 보일 데이터를 페치..fetch\n    let previousTweets = OldTweets.default.result;\n    this.setState({\n      tweetArr: previousTweets\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"EnterNewTweet\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Textarea, {\n      className: \"NewMessage\",\n      placeholder: \"What's happening?\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(Button, {\n      className: \"Make-Btn\",\n      name: \"MakeTweetBtn\",\n      innerHTML: \"Tweet\",\n      btnClicked: this.generateNewTweet,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(DisplayTweets, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), this.state.tweetArr.map(el => React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"User\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, el.user), React.createElement(\"span\", {\n      className: \"Date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, el.date), React.createElement(\"div\", {\n      className: \"Content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, el.contents))));\n  }\n\n}\n\nexport default EnterNewTweet;","map":{"version":3,"sources":["/Users/byeongjinkang/jsPractice/miniter_react/Miniter_React/main_page/src/component/innerboxes/rightside/enterNewtweet/enterNewTweet.js"],"names":["React","Textarea","Button","DisplayTweets","OldTweets","EnterNewTweet","Component","constructor","getPreviousTweets","previousTweets","default","result","i","length","tweetArr","push","makeTweetList","console","log","getDate","now","Date","y","getFullYear","m","getMonth","d","generateNewTweet","setState","buttonClicked","state","user","document","querySelector","innerHTML","date","content","value","tweet","newList","slice","contents","componentDidMount","render","map","el"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './enterNewTweet.css';\nimport {Textarea, Button} from '../../../form/input';\nimport DisplayTweets from '../displaytweets/displayTweets';\nimport * as OldTweets from '../../../../data/getAllTimeline';\n\nclass EnterNewTweet extends React.Component {\n\n    constructor () {\n        super();\n        this.state = {\n            buttonClicked: false,\n            user: \"\",\n            date: \"\",\n            content: \"\",\n            tweetArr: []\n        }\n        //this.tweetArr = [];\n\n        console.log('constructor')\n    }\n\n    componentDidMount() {\n        //첫 화면에 보일 데이터를 페치..fetch\n        let previousTweets = OldTweets.default.result;\n        this.setState({\n            tweetArr: previousTweets\n        })\n\n    }\n\n    getPreviousTweets = () => {\n        let previousTweets = OldTweets.default.result;\n        for (let i=0; i < previousTweets.length; i++) {\n            this.tweetArr.push(this.makeTweetList(previousTweets[i]));\n        }\n        console.log(this.tweetArr);\n    }\n\n    getDate = () => {\n        let now = new Date();\n        let y = now.getFullYear();\n        let m = now.getMonth() + 1;\n        let d = now.getDate();\n        return `${y}${(m < 10 ? '0' : '') + m}${(d < 10 ? '0' : '') + d}`;\n    }\n\n    generateNewTweet = () => {\n        this.setState({\n            buttonClicked: !this.state.buttonClicked,\n            user : document.querySelector('.UserName').innerHTML,\n            date : this.getDate(),\n            content : document.querySelector('.NewMessage').value\n        });\n        \n        console.log(this.makeTweetList(this.state));\n\n        \n    }\n    \n    tweet = () => {\n        const newList = this.state.tweetArr.slice();\n        newList.push({\n            contents: 'sdfsf'\n        });\n\n        this.setState({\n            tweetArr: newList\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"EnterNewTweet\">\n                <Textarea \n                    className=\"NewMessage\" \n                    placeholder=\"What's happening?\" \n                />\n                <Button \n                    className=\"Make-Btn\" \n                    name=\"MakeTweetBtn\"\n                    innerHTML=\"Tweet\"\n                    btnClicked={this.generateNewTweet}\n                />\n\n                <DisplayTweets />\n\n                {\n                    this.state.tweetArr.map(el=> (\n                        <li>\n                            <span className=\"User\">{el.user}</span>\n                            <span className=\"Date\">{el.date}</span>\n                            <div className=\"Content\">{el.contents}</div>\n                        </li>\n                    ))\n                }\n            </div>\n        );\n    }\n}\n\nexport default EnterNewTweet;\n\n"]},"metadata":{},"sourceType":"module"}