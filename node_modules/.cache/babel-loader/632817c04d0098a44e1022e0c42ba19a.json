{"ast":null,"code":"var _jsxFileName = \"/Users/byeongjinkang/jsPractice/miniter_react/Miniter_React/main_page/src/component/innerboxes/rightside/enterNewtweet/enterNewTweet.js\";\nimport React from 'react';\nimport './enterNewTweet.css';\nimport { Textarea, Button } from '../../../form/input';\nimport DisplayTweets from '../displaytweets/displayTweets';\n\nclass EnterNewTweet extends React.Component {\n  constructor() {\n    super();\n\n    this.getPreviousTweets = () => {\n      fetch('main_page/src/data/getAllTimeline.json', {\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        }\n      }).then(response => {\n        console.log(response);\n        response.json().then(data => {\n          console.log(data);\n        });\n      });\n    };\n\n    this.getDate = () => {\n      let now = new Date();\n      let y = now.getFullYear();\n      let m = now.getMonth() + 1;\n      let d = now.getDate();\n      return \"\".concat(y).concat((m < 10 ? '0' : '') + m).concat((d < 10 ? '0' : '') + d);\n    };\n\n    this.generateNewTweet = () => {\n      this.setState({\n        buttonClicked: !this.state.buttonClicked\n      });\n      this.getPreviousTweets();\n      let tweetObj = {\n        user: document.querySelector('.UserName').innerHTML,\n        date: this.getDate(),\n        content: document.querySelector('.NewMessage').value\n      };\n      this.tweetArr.unshift(this.makeTweetList(tweetObj));\n    };\n\n    this.makeTweetList = obj => {\n      let tweet = \"\\n          <span class=\\\"user\\\">\".concat(obj.user, \"</span>\\n          <span class=\\\"date\\\">\").concat(obj.date, \"</span>\\n          <div class=\\\"content\\\">\").concat(obj.contents, \"</div>\\n        \");\n      return tweet;\n    };\n\n    this.state = {\n      buttonClicked: false\n    };\n    this.tweetArr = [];\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"EnterNewTweet\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Textarea, {\n      className: \"NewMessage\",\n      placeholder: \"What's happening?\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(Button, {\n      className: \"Make-Btn\",\n      name: \"MakeTweetBtn\",\n      innerHTML: \"Tweet\",\n      btnClicked: this.generateNewTweet,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(DisplayTweets, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default EnterNewTweet;","map":{"version":3,"sources":["/Users/byeongjinkang/jsPractice/miniter_react/Miniter_React/main_page/src/component/innerboxes/rightside/enterNewtweet/enterNewTweet.js"],"names":["React","Textarea","Button","DisplayTweets","EnterNewTweet","Component","constructor","getPreviousTweets","fetch","headers","then","response","console","log","json","data","getDate","now","Date","y","getFullYear","m","getMonth","d","generateNewTweet","setState","buttonClicked","state","tweetObj","user","document","querySelector","innerHTML","date","content","value","tweetArr","unshift","makeTweetList","obj","tweet","contents","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,qBAAP;AACA,SAAQC,QAAR,EAAkBC,MAAlB,QAA+B,qBAA/B;AACA,OAAOC,aAAP,MAA0B,gCAA1B;;AAEA,MAAMC,aAAN,SAA4BJ,KAAK,CAACK,SAAlC,CAA4C;AAExCC,EAAAA,WAAW,GAAI;AACX;;AADW,SAQfC,iBARe,GAQK,MAAM;AACtBC,MAAAA,KAAK,CAAE,wCAAF,EAA4C;AAC7CC,QAAAA,OAAO,EAAG;AACN,0BAAgB,kBADV;AAEN,oBAAW;AAFL;AADmC,OAA5C,CAAL,CAMKC,IANL,CAQSC,QAAD,IAAc;AAACC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACXA,QAAAA,QAAQ,CAACG,IAAT,GAAgBJ,IAAhB,CAAsBK,IAAD,IAAU;AAC3BH,UAAAA,OAAO,CAACC,GAAR,CAAYE,IAAZ;AACH,SAFD;AAGH,OAZT;AAcH,KAvBc;;AAAA,SAyBfC,OAzBe,GAyBL,MAAM;AACZ,UAAIC,GAAG,GAAG,IAAIC,IAAJ,EAAV;AACA,UAAIC,CAAC,GAAGF,GAAG,CAACG,WAAJ,EAAR;AACA,UAAIC,CAAC,GAAGJ,GAAG,CAACK,QAAJ,KAAiB,CAAzB;AACA,UAAIC,CAAC,GAAGN,GAAG,CAACD,OAAJ,EAAR;AACA,uBAAUG,CAAV,SAAc,CAACE,CAAC,GAAG,EAAJ,GAAS,GAAT,GAAe,EAAhB,IAAsBA,CAApC,SAAwC,CAACE,CAAC,GAAG,EAAJ,GAAS,GAAT,GAAe,EAAhB,IAAsBA,CAA9D;AACH,KA/Bc;;AAAA,SAiCfC,gBAjCe,GAiCI,MAAM;AACrB,WAAKC,QAAL,CAAc;AACVC,QAAAA,aAAa,EAAE,CAAC,KAAKC,KAAL,CAAWD;AADjB,OAAd;AAGA,WAAKnB,iBAAL;AACA,UAAIqB,QAAQ,GAAG;AACXC,QAAAA,IAAI,EAAGC,QAAQ,CAACC,aAAT,CAAuB,WAAvB,EAAoCC,SADhC;AAEXC,QAAAA,IAAI,EAAG,KAAKjB,OAAL,EAFI;AAGXkB,QAAAA,OAAO,EAAGJ,QAAQ,CAACC,aAAT,CAAuB,aAAvB,EAAsCI;AAHrC,OAAf;AAMA,WAAKC,QAAL,CAAcC,OAAd,CAAsB,KAAKC,aAAL,CAAmBV,QAAnB,CAAtB;AAEH,KA9Cc;;AAAA,SAgDfU,aAhDe,GAgDEC,GAAD,IAAS;AACrB,UAAIC,KAAK,8CAEcD,GAAG,CAACV,IAFlB,qDAGcU,GAAG,CAACN,IAHlB,uDAIgBM,GAAG,CAACE,QAJpB,qBAAT;AAMA,aAAOD,KAAP;AACH,KAxDc;;AAEX,SAAKb,KAAL,GAAa;AACTD,MAAAA,aAAa,EAAE;AADN,KAAb;AAGA,SAAKU,QAAL,GAAgB,EAAhB;AACH;;AAoDDM,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD;AACI,MAAA,SAAS,EAAC,YADd;AAEI,MAAA,WAAW,EAAC,mBAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAKI,oBAAC,MAAD;AACI,MAAA,SAAS,EAAC,UADd;AAEI,MAAA,IAAI,EAAC,cAFT;AAGI,MAAA,SAAS,EAAC,OAHd;AAII,MAAA,UAAU,EAAE,KAAKlB,gBAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,EAWI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXJ,CADJ;AAeH;;AA5EuC;;AA+E5C,eAAepB,aAAf","sourcesContent":["import React from 'react';\nimport './enterNewTweet.css';\nimport {Textarea, Button} from '../../../form/input';\nimport DisplayTweets from '../displaytweets/displayTweets';\n\nclass EnterNewTweet extends React.Component {\n\n    constructor () {\n        super();\n        this.state = {\n            buttonClicked: false\n        }\n        this.tweetArr = [];\n    }\n\n    getPreviousTweets = () => {\n        fetch ('main_page/src/data/getAllTimeline.json', {\n            headers : {\n                'Content-Type': 'application/json',\n                'Accept' : 'application/json'\n            }\n        })\n            .then (\n                \n                (response) => {console.log(response);\n                    response.json().then((data) => {\n                        console.log(data);\n                    });\n                }\n            )\n    }\n\n    getDate = () => {\n        let now = new Date();\n        let y = now.getFullYear();\n        let m = now.getMonth() + 1;\n        let d = now.getDate();\n        return `${y}${(m < 10 ? '0' : '') + m}${(d < 10 ? '0' : '') + d}`;\n    }\n\n    generateNewTweet = () => {\n        this.setState({\n            buttonClicked: !this.state.buttonClicked\n        });\n        this.getPreviousTweets();\n        let tweetObj = {\n            user : document.querySelector('.UserName').innerHTML,\n            date : this.getDate(),\n            content : document.querySelector('.NewMessage').value\n        }\n       \n        this.tweetArr.unshift(this.makeTweetList(tweetObj));\n        \n    }\n    \n    makeTweetList = (obj) => {\n        let tweet = \n        `\n          <span class=\"user\">${obj.user}</span>\n          <span class=\"date\">${obj.date}</span>\n          <div class=\"content\">${obj.contents}</div>\n        `\n        return tweet;\n    };\n\n    render() {\n        return (\n            <div className=\"EnterNewTweet\">\n                <Textarea \n                    className=\"NewMessage\" \n                    placeholder=\"What's happening?\" \n                />\n                <Button \n                    className=\"Make-Btn\" \n                    name=\"MakeTweetBtn\"\n                    innerHTML=\"Tweet\"\n                    btnClicked={this.generateNewTweet}\n                />\n                <DisplayTweets />\n            </div>\n        );\n    }\n}\n\nexport default EnterNewTweet;\n\n"]},"metadata":{},"sourceType":"module"}